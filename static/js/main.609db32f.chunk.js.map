{"version":3,"sources":["student/Student.js","student/StudentForm.js","student/StudentsList.js","index.js"],"names":["Student","carnet","horario","tarde","this","_carnet","_horario","_tarde","StudentForm","props","state","handleInputChange","bind","handleSubmit","event","preventDefault","carnetRegex","RegExp","console","log","test","length","student","onSave","setState","alert","render","target","value","type","checked","name","labeltext","placeholder","id","classl","classi","className","onChange","htmlFor","text","action","onSubmit","renderInput","renderOptions","data-submit","React","Component","StudentsList","Object","keys","map","key","index","scope","substring","students","onClick","onDelete","renderHeader","renderBody","App","err","slice","find","current","push","filter","ele","saveStudent","deleteStudent","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.609db32f.chunk.js","sourcesContent":["class Student {\n    constructor(carnet, horario,tarde) {\n        this._carnet = carnet;\n        this._horario = horario;\n        this._tarde = tarde;\n    }\n\n    get carnet() { return this._carnet }\n    get horario() { return this._horario }\n    get tarde() { return this._tarde }\n\n    // Hacen falta las validaciones antes de la asignación\n    set carnet(carnet) { this._carnet = carnet }\n    set horario(horario) { this._horario = horario }\n    set tarde(tarde) { this._tarde = tarde }\n}\n\nexport default Student;","import React from 'react';\nimport Student from './Student';\n\nclass StudentForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { carnet: '', horario: \"Lunes de 9:00 a 11.00\", tarde: true };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // Manejador del evento de submit, ejecuta la funcion saveStudent\n    // Pasada por props\n    handleSubmit(event) {\n        event.preventDefault();\n        // Se necesitan validaciones de entrada\n        var carnetRegex = new RegExp('[0-9]{8}');\n        console.log(carnetRegex.test(this.state.carnet) && this.state.carnet.length===8);\n        if(carnetRegex.test(this.state.carnet) && this.state.carnet.length===8){\n            let student = new Student(this.state.carnet, this.state.horario, this.state.tarde);\n            this.props.onSave(student);\n            this.setState({ carnet: '', horario: \"Lunes de 9:00 a 11.00\", tarde: false });\n\n        }else{\n            alert(\"Formato no valido\");\n            this.setState ({ carnet: '', horario: \"Lunes de 9:00 a 11.00\", tarde: false });\n            this.render();\n        }\n        \n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }  \n\n    // Label + input\n    // TODO: Necesita se modificado para funcionar con todos los tipos de entrada\n    renderInput(name,labeltext,placeholder, id, classl, classi,type = \"text\") {\n        if (type === \"checkbox\"){\n            return(\n                <fieldset  className=\"form-group\">\n                    <div className=\"custom-control custom-switch\">\n                        <input\n                            name = {name}\n                            className= {classi}\n                            type={type}\n                            id={id}\n                            checked={this.state.tarde}\n                            onChange={this.handleInputChange} \n                        />\n                        <label htmlFor={id} className = {classl}>{labeltext}</label>\n                    </div>\n                </fieldset>\n\n            );\n        }\n        return (\n            /* Se un fragmento React, para establecer que este código se hijo directo en el resultado */\n            <fieldset className = \"form-group\">\n                <label htmlFor={name} className = {classl}>{labeltext}</label>\n                <input\n                    className = {classi}\n                    type={type}\n                    name={name} id={id}\n                    value={this.state.name}\n                    placeholder= {placeholder}\n                    onChange={this.handleInputChange} />\n            </fieldset>\n        );\n    }\n    renderOptions(){\n        return(\n            <div className=\"form-group\">\n                <label htmlFor=\"horario\">Seleccione el horario:</label>\n                <select name=\"horario\" className=\"form-control\" id=\"schedule_field\" value={this.state.horario.text} onChange={this.handleInputChange} >\n                    <option value=\"Lunes de 9:00 a 11.00\">Lunes de 9:00 a 11.00</option>\n                    <option value=\"Martes de 13:30 a 15:30\">Martes de 13:30 a 15:30</option>\n                    <option value=\"Miércoles de 9:00 a 11.00\">Miércoles de 9:00 a 11.00</option>\n                    <option value=\"Jueves de 13:30 a 15:30\">Jueves de 13:30 a 15:30</option>\n                    <option value=\"Viernes de 9:00 a 11.00\">Viernes de 9:00 a 11.00</option>\n                    <option value=\"Viernes de 15:30 a 17:30\">Viernes de 15:30 a 17:30</option>\n                </select>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <form id=\"contact\" className=\"jumbotron\" action=\"\" onSubmit={this.handleSubmit}>\n                <h3>Registro de laboratorio.</h3>\n                {this.renderInput(\"carnet\",\"Ingrese el carnet:\",\"00031111\",\"carnet_field\",\"col-sm-2 col-form-label\",\"form-control\",'text')}\n                {this.renderOptions()}\n                {this.renderInput(\"tarde\",\"llego tarde?:\",\" \",\"late_switch\",\"custom-control-label\",\"custom-control-input\", \"checkbox\")}\n                <fieldset className=\"form-group\">\n                    <button name=\"submit\" type=\"submit\" id=\"contact-submit\" className=\"btn btn-danger\" data-submit=\"...Sending\">Submit</button>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nexport default StudentForm;","import React from 'react';\nimport Student from './Student';\n\nclass StudentsList extends React.Component {\n\n    renderHeader() {\n        return Object.keys(new Student()).map((key, index) => {\n            return (\n                <th key={index} scope=\"col\">\n                    {key.substring(1)}\n                </th>\n            );\n        });\n    }\n\n    renderBody(students) {\n        return students.map(({ carnet, horario, tarde }) => {\n            return (\n                <tr key={carnet}>\n                    <td>{carnet}</td>\n                    <td>{horario}</td>\n                    <td>{tarde ? \"Tarde\" : \"A tiempo\"}</td>\n                    <td>\n                        <button  onClick={() => {this.props.onDelete(carnet)}}>Delete</button>\n                    </td>\n                </tr>\n            );\n        });\n      \n    }\n\n    render() {\n        return (\n            <section>\n                <div>\n                    <table className=\"table table-hover\">\n                        <thead>\n                            <tr className=\"table-dark\">\n                                {this.renderHeader()}\n                                <th> actions</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"table_body\">\n                            {this.renderBody(this.props.students)}\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n            \n        );\n    }\n}\n\nexport default StudentsList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentForm from './student/StudentForm';\nimport StudentsList from './student/StudentsList';\n\n//import './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            students: [],\n            err: ''\n        }\n    }\n\n    saveStudent(student) {\n        const students = this.state.students.slice();\n        if (!students.find((current) => {\n            return current.carnet === student.carnet;\n        })) {\n            students.push(student);\n            this.setState({ students, err: '' });\n        } else {\n            this.setState({ err: \"El estudiante ya existe\" });\n            alert(\"El estudiante ya existe\");\n        }\n\n    }\n\n    deleteStudent(carnet) {\n        const students = this.state.students.filter(function (ele) {\n            return ele.carnet !== carnet;\n        });\n        this.setState({ students });\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div >\n                    \n                    <StudentForm onSave={(student) => {\n                        this.saveStudent(student)\n                    }} />\n                </div>\n                <StudentsList students={this.state.students} onDelete={(carnet) => {\n                    this.deleteStudent(carnet);\n                }} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}