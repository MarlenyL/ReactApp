{"version":3,"sources":["student/Student.js","student/StudentForm.js","student/StudentsList.js","index.js"],"names":["Student","carnet","horario","tarde","this","_carnet","_horario","_tarde","StudentForm","props","state","handleInputChange","bind","handleSubmit","event","preventDefault","student","onSave","target","value","type","checked","name","setState","labeltext","placeholder","id","classl","classi","class","onChange","htmlFor","for","action","onSubmit","renderInput","renderOptions","data-submit","React","Component","StudentsList","Object","keys","map","key","index","substring","students","lastname","onClick","onDelete","renderHeader","renderBody","App","err","slice","find","current","push","filter","ele","className","saveStudent","deleteStudent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2075639d.chunk.js","sourcesContent":["class Student {\n    constructor(carnet, horario,tarde) {\n        this._carnet = carnet;\n        this._horario = horario;\n        this._tarde = tarde;\n    }\n\n    get carnet() { return this._carnet }\n    get horario() { return this._horario }\n    get tarde() { return this._tarde }\n\n    // Hacen falta las validaciones antes de la asignación\n    set carnet(carnet) { this._carnet = carnet }\n    set horario(horario) { this._horario = horario }\n    set tarde(tarde) { this._tarde = tarde }\n}\n\nexport default Student;","import React from 'react';\nimport Student from './Student';\n\nclass StudentForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { carnet: '', horario: '', tarde: true };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // Manejador del evento de submit, ejecuta la funcion saveStudent\n    // Pasada por props\n    handleSubmit(event) {\n        event.preventDefault();\n        // Se necesitan validaciones de entrada\n        let student = new Student(this.state.carnet, this.state.horario, this.state.tarde);\n        this.props.onSave(student);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    // Label + input\n    // TODO: Necesita se modificado para funcionar con todos los tipos de entrada\n    renderInput(name,labeltext,placeholder, id, classl, classi,type = \"text\") {\n        if (type === \"checkbox\"){\n            return(\n                <fieldset  class=\"form-group\">\n                    <div class=\"custom-control custom-switch\">\n                        <input\n                            class = {classi}\n                            type={type}\n                            name={name} id={id}\n                            value={this.state.tarde}\n                            onChange={this.handleInputChange} \n                        />\n                        <label htmlFor={name} class = {classl}>{labeltext}</label>\n                    </div>\n                </fieldset>\n\n            );\n        }\n        return (\n            /* Se un fragmento React, para establecer que este código se hijo directo en el resultado */\n            <fieldset class = \"form-group\">\n                <label htmlFor={name} class = {classl}>{labeltext}</label>\n                <input\n                    class = {classi}\n                    type={type}\n                    name={name} id={id}\n                    value={this.state[name]}\n                    placeholder= {placeholder}\n                    onChange={this.handleInputChange} />\n            </fieldset>\n        );\n    }\n    renderOptions(){\n        return(\n            <div class=\"form-group\">\n                <label for=\"schedule\">Seleccione el horario:</label>\n                <select name=\"schedule\" class=\"form-control\" id=\"schedule_field\" value={this.state.value}>\n                    <option value=\"Lunes de 9:00 a 11.00\">Lunes de 9:00 a 11.00</option>\n                    <option value=\"Martes de 13:30 a 15:30\">Martes de 13:30 a 15:30</option>\n                    <option value=\"Miércoles de 9:00 a 11.00\">Miércoles de 9:00 a 11.00</option>\n                    <option value=\"Jueves de 13:30 a 15:30\">Jueves de 13:30 a 15:30</option>\n                    <option value=\"Viernes de 9:00 a 11.00\">Viernes de 9:00 a 11.00</option>\n                    <option value=\"Viernes de 15:30 a 17:30\">Viernes de 15:30 a 17:30</option>\n                </select>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <form id=\"contact\" class=\"jumbotron\" action=\"\" onSubmit={this.handleSubmit}>\n                <h3>Registro de laboratorio.</h3>\n                {this.renderInput(\"carnet\",\"Ingrese el carnet:\",\"00031111\",\"carnet_field\",\"col-sm-2 col-form-label\",\"form-control\",'text')}\n                {this.renderOptions()}\n                {this.renderInput(\"late_switch\",\"llego tarde?:\",\" \",\"late_switch\",\"custom-control-label\",\"custom-control-input\", \"checkbox\")}\n                <fieldset class=\"form-group\">\n                    <button name=\"submit\" type=\"submit\" id=\"contact-submit\" class=\"btn btn-danger\" data-submit=\"...Sending\">Submit</button>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nexport default StudentForm;","import React from 'react';\nimport Student from './Student';\n\nclass StudentsList extends React.Component {\n\n    renderHeader() {\n        return Object.keys(new Student()).map((key, index) => {\n            return (\n                <th key={index}>\n                    {key.substring(1)}\n                </th>\n            );\n        });\n    }\n\n    renderBody(students) {\n        return students.map(({ carnet, name, lastname }) => {\n            return (\n                <tr key={carnet}>\n                    <td>{carnet}</td>\n                    <td>{name}</td>\n                    <td>{lastname}</td>\n                    <td>\n                        <button  onClick={() => {this.props.onDelete(carnet)}}>Delete</button>\n                    </td>\n                </tr>\n            );\n        });\n      \n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            {this.renderHeader()}\n                            <th> actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                         {this.renderBody(this.props.students)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default StudentsList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentForm from './student/StudentForm';\nimport StudentsList from './student/StudentsList';\n\n//import './index.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            students: [],\n            err: ''\n        }\n    }\n\n    saveStudent(student) {\n        const students = this.state.students.slice();\n        if (!students.find((current) => {\n            return current.carnet === student.carnet;\n        })) {\n            students.push(student);\n            this.setState({ students, err: '' });\n        } else {\n            this.setState({ err: \"El estudiante ya existe\" })\n        }\n\n    }\n\n    deleteStudent(carnet) {\n        const students = this.state.students.filter(function (ele) {\n            return ele.carnet !== carnet;\n        });\n        this.setState({ students });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div>{this.state.err}</div>\n                    <StudentForm onSave={(student) => {\n                        this.saveStudent(student)\n                    }} />\n                </div>\n                <StudentsList students={this.state.students} onDelete={(carnet) => {\n                    this.deleteStudent(carnet);\n                }} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}